schema:
  - "api/src/schema/*.graphql"
exec:
  layout: follow-schema
  dir: internal/graphql/generated
  package: generated
model:
  filename: internal/graphql/models/models_gen.go
  package: models
resolver:
  layout: follow-schema
  dir: internal/graphql/genresolver
  package: genresolver
  type: Resolver
  filename_template: "{name}.resolvers.go"
omit_getters: true
models:
  Timestamp:
    model: github.com/dictyBase/graphql-server/internal/graphql/models.Timestamp
  User:
    model: github.com/dictyBase/go-genproto/dictybaseapis/user.User
  Role:
    model: github.com/dictyBase/go-genproto/dictybaseapis/user.Role
  Permission:
    model: github.com/dictyBase/go-genproto/dictybaseapis/user.Permission
  Content:
    model: github.com/dictyBase/go-genproto/dictybaseapis/content.Content
  # Publication:
  #   model: github.com/dictyBase/go-genproto/dictybaseapis/publication.Publication
  Author:
    model: github.com/dictyBase/go-genproto/dictybaseapis/publication.Author
  Strain:
    model: github.com/dictyBase/graphql-server/internal/graphql/models.Strain
    fields:
      characteristics:
        resolver: true
      genetic_modification:
        resolver: true
      genotypes:
        resolver: true
      in_stock:
        resolver: true
      mutagenesis_method:
        resolver: true
      names:
        resolver: true
      phenotypes:
        resolver: true
      systematic_name:
        resolver: true
  Plasmid:
    model: github.com/dictyBase/graphql-server/internal/graphql/models.Plasmid
    fields:
      in_stock:
        resolver: true
      keywords:
        resolver: true
      genbank_accession:
        resolver: true
  Order:
    model: github.com/dictyBase/go-genproto/dictybaseapis/order.Order
  Auth:
    model: github.com/dictyBase/go-genproto/dictybaseapis/auth.Auth
  Gene:
    fields:
      goas:
        resolver: true
  Organism:
    fields:
      downloads:
        resolver: true
